.TH BAMDOWNSAMPLERANDOM 1 "July 2013" BIOBAMBAM
.SH NAME
bamdownsamplerandom - downsample a SAM, BAM or CRAM file
.SH SYNOPSIS
.PP
.B bamdownsamplerandom
[options]
.SH DESCRIPTION
bamdownsamplerandom reads a SAM, BAM or CRAM file from standard input,
randomly discards reads and writes the remaining reads to standard output in
BAM format. For a pair of reads either both ends are discarded or both ends
are kept. The order of reads in the output file may be different from the
order in the input if the reads in the input file are not collated by their read
name.
.PP
The following key=value pairs can be given:
.PP
.B p=<1>:
probability for a pair of reads or a single end read to be kept. By default
all reads are kept.
.PP
.B seed=<>:
seed used for the random number generator. By default the current time is
used, i.e. each run of the program will select a different subset of reads
from an input file. If the behaviour of the program needs to be
reproducible a fixed number can be used as the random seed.
.PP
.B filename=<stdin>: 
input file name (data is read from standard input if this option is not given)
.PP
.B inputformat=<bam>: input file format
All versions of bamtofastq come with support for the BAM input format. If
the program in addition is linked to the io_lib package, then the following
options are valid:
.IP bam:
BAM (see http://samtools.sourceforge.net/SAM1.pdf)
.IP sam:
SAM (see http://samtools.sourceforge.net/SAM1.pdf)
.IP cram:
CRAM (see http://www.ebi.ac.uk/ena/about/cram_toolkit)
.PP
.B level=<-1|0|1|9|11>:
set compression level of the output BAM file. Valid
values are
.IP -1:
zlib/gzip default compression level
.IP 0:
uncompressed
.IP 1:
zlib/gzip level 1 (fast) compression
.IP 9:
zlib/gzip level 9 (best) compression
.P
If libmaus has been compiled with support for igzip (see
https://software.intel.com/en-us/articles/igzip-a-high-performance-deflate-compressor-with-optimizations-for-genomic-data)
then an additional valid value is
.IP 11:
igzip compression
.PP
.B exclude=<SECONDARY>:
Do not include reads in the output that have any of the given flags set. The
flags are given separated by commas. Valid flags are:
.IP PAIRED:
read was paired in sequencing
.IP PROPER_PAIR:
read has been mapped as part of a proper pair
.IP UNMAP:
read was not mapped
.IP MUNMAP:
mate of read was not mapped
.IP REVERSE:
read was mapped to the reverse strand
.IP MREVERSE:
mate of read was mapped to the reverse strand
.IP READ1:
read was first read of a pair during sequencing
.IP READ2:
read was second read of a pair during sequencing
.IP SECONDARY:
alignment is secondary, i.e. an alternative mapping to the primary alignment in the same file
.IP QCFAIL:
read as marked as having failed quality control
.IP DUP:
read is marked as a duplicate of another read in the same file (see bammarkduplicates)
.IP SUPPLEMENTARY:
read is marked as supplementary alignment
.PP
.B disablevalidation=<0>:
Valid values are
.IP 0:
run input file validation on alignments (this is the default)
.IP 1:
do not check the validity of the input file (this may help for some broken
input files, but it is a security risk as it can lead to the execution of
arbitrary code through a forged input file).
.PP
.B colhlog=<18>
base two logarithm of the size of the hash table used for collation (the
default value is 18 and should work reasonably well for most input files.
Please see the biobambam paper at arxiv.org/abs/1306.0836 for details).
.PP
.B colsbs=<128M>
size of hash table overflow list in bytes (the default is 128MB and should
work reasonably well for most input files. Please see the biobambam paper at 
arxiv.org/abs/1306.0836 for details).
.PP
.B T=<bamdownsamplerandom_hostname_pid_time>
file name of temporary file used for collation
.PP
.B ranges=<>:
coordinate ranges selected from input. This option is only available for
input files in BAM format which have a corresponding index (.bai file) and
if input is via file (i.e. the filename argument is set). 
Valid ranges consist either of
.IP "whole\ reference\ sequence:"
a whole reference sequence (e.g. "chr1")
.IP "half\ open\ interval\ on\ reference\ sequence:"
an interval on a reference sequence half open on the right (e.g. "chr1:50000"
which means alignments overlapping chr1 from position 50000 to the end of chr1)
.IP "interval\ on\ reference\ sequence:"
an interval on a reference sequence (e.g. "chr1:50000-60000" which means
alignments overlapping positions 50000 to 60000 on chr1)
.PP
Multiple ranges are separated by space characters (e.g. ranges="chr1:10000-20000 chr1:30000-40000"). 
.PP
.B reference=: 
file name of the reference for CRAM input files. If this key is unset, then
the CRAM file header will be scanned for obtaining a reference file name.
.PP
.B tmpfile=<filename>: 
prefix for temporary files. By default the temporary files are created in the current directory
.PP
.B md5=<0|1>:
md5 checksum creation for output file. Valid values are
.IP 0:
do not compute checksum. This is the default.
.IP 1:
compute checksum. If the md5filename key is set, then the checksum is
written to the given file. If md5filename is unset, then no checksum will be computed.
.PP
.B md5filename
file name for md5 checksum if md5=1.
.PP
.B index=<0|1>:
compute BAM index for output file. Valid values are
.IP 0:
do not compute BAM index. This is the default.
.IP 1:
compute BAM index. If the indexfilename key is set, then the BAM index is
written to the given file. If indexfilename is unset, then no BAM index will be computed.
.PP
.B indexfilename
file name for BAM index if index=1.
.SH AUTHOR
Written by German Tischler.
.SH "REPORTING BUGS"
Report bugs to <gt1@sanger.ac.uk>
.SH COPYRIGHT
Copyright \(co 2009-2013 German Tischler, \(co 2011-2013 Genome Research Limited.
License GPLv3+: GNU GPL version 3 <http://gnu.org/licenses/gpl.html>
.br
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
